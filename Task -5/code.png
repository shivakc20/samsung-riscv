#include <stdio.h>
#define NUM_LEDS 4
#define NUM_BUTTONS 4

int ledPins[NUM_LEDS] = {2, 3, 4, 5};  // LED pins
int buttonPins[NUM_BUTTONS] = {6, 7, 8, 9};  // Button pins

int sequence[100];  // Stores the sequence
int sequenceLength = 1;  // Initial sequence length
int playerIndex = 0;  // Player's current input position

void setup() {
    Serial.begin(9600);

    for (int i = 0; i < NUM_LEDS; i++) {
        pinMode(ledPins[i], OUTPUT);
        pinMode(buttonPins[i], INPUT_PULLUP);
    }

    randomSeed(analogRead(0));  // Randomize sequence
    sequence[0] = random(NUM_LEDS);
}

void playSequence() {
    for (int i = 0; i < sequenceLength; i++) {
        digitalWrite(ledPins[sequence[i]], HIGH);
        delay(500);
        digitalWrite(ledPins[sequence[i]], LOW);
        delay(250);
    }
}

bool checkInput() {
    for (int i = 0; i < NUM_BUTTONS; i++) {
        if (digitalRead(buttonPins[i]) == LOW) {
            delay(200);  // Debounce delay
            if (i == sequence[playerIndex]) {
                digitalWrite(ledPins[i], HIGH);
                delay(300);
                digitalWrite(ledPins[i], LOW);
                playerIndex++;
                return true;
            } else {
                return false;  // Wrong button pressed
            }
        }
    }
    return true;
}

void loop() {
    delay(1000);
    playSequence();
    playerIndex = 0;

    while (playerIndex < sequenceLength) {
        if (!checkInput()) {
            Serial.println("Game Over!");
            sequenceLength = 1;  // Reset game
            sequence[0] = random(NUM_LEDS);
            delay(2000);
            return;
        }
    }

    Serial.println("Correct! Next round...");
    sequence[sequenceLength] = random(NUM_LEDS);
    sequenceLength++;
    delay(1000);
}
